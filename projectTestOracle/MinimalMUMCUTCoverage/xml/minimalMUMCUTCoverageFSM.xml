<?xml version="1.0" encoding="UTF-8"?>
<mappings><mapping><name>initializeMapping</name><transition-name>initialize</transition-name><code>final WebClient webClient = new WebClient();
		WebRequest request = null;
		 try {
			request = new WebRequest( new URL(&quot;http://localhost:8080/CoverageWebApplication/coverage/MinimalMUMCUTCoverage&quot; ), HttpMethod.POST);
		} catch (MalformedURLException e) {
			e.printStackTrace();
		}
		 
		HtmlPage page = null;
		try {
			page = webClient.getPage(request);
		} catch (FailingHttpStatusCodeException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		HtmlForm form = page.getFormByName(&quot;minimalMUMCUTCoverageForm&quot;);

		final HtmlSubmitInput buttonMUTPH = form.getInputByValue(&quot;MUTP Heuristic&quot;);
		
		final HtmlSubmitInput buttonFDM = form.getInputByValue(&quot;Fault Detection Maximization&quot;);
		
		final HtmlSubmitInput buttonNewExpression = form.getInputByValue(&quot;New Expression&quot;);
		
		final HtmlSubmitInput buttonGraphCoverage = form.getInputByValue(&quot;Graph Coverage&quot;);
		final HtmlSubmitInput buttonDataFlowCoverage = form.getInputByValue(&quot;Data Flow Coverage&quot;);
		final HtmlSubmitInput buttonLogicCoverage = form.getInputByValue(&quot;Logic Coverage&quot;);
		
		final HtmlTextInput textInputExpression = form.getInputByName(&quot;expression&quot;);
		final HtmlTextInput textInputInfeasibleLiterals = form.getInputByName(&quot;infeasibleLiterals&quot;);
		final HtmlTextInput textInputMaxTestSetSize = form.getInputByName(&quot;maxTestSetSize&quot;);</code></mapping><mapping><name>enterWrongExpressionMapping</name><transition-name>enterWrongExpression</transition-name><code>textInputExpression.setText(&quot;a &amp;&amp; b&quot;);textInputInfeasibleLiterals.setText(&quot;&quot;);</code></mapping><mapping><name>enterIntegerMapping</name><transition-name>enterInteger</transition-name><code>textInputMaxTestSetSize.setText(&quot;1&quot;);</code></mapping><mapping><name>clearIntegerMapping</name><transition-name>clearInteger</transition-name><code>textInputMaxTestSetSize.setText(&quot;&quot;);</code></mapping><mapping><name>enterWrongIntegerMapping</name><transition-name>enterWrongInteger</transition-name><code>textInputMaxTestSetSize.setText(&quot;-1&quot;);</code></mapping><mapping><name>enterExpressionAndWrongLiteralsMapping</name><transition-name>enterExpressionAndWrongLiterals</transition-name><code>textInputExpression.setText(&quot;a | b&quot;);
			textInputInfeasibleLiterals.setText(&quot;a = 0&quot;);</code></mapping><mapping><name>mUTPHMapping</name><transition-name>mUTPH</transition-name><code>try {
			page = buttonMUTPH.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping><mapping><name>fDMMapping</name><transition-name>fDM</transition-name><code>try {
			page = buttonFDM.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping><mapping><name>dataFlowMapping</name><transition-name>dataFlow</transition-name><code>try {
			page = buttonDataFlowCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping><mapping><name>graphMapping</name><transition-name>graph</transition-name><code>try {
			page = buttonGraphCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping><mapping><name>logicMapping</name><transition-name>logic</transition-name><code>try {
			page = buttonLogicCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping><mapping><name>newExpressionMapping</name><transition-name>newExpression</transition-name><code>try {
			page = buttonNewExpression.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping><mapping><name>ConstraintExceptionNotNullMapping</name><constraint-name>ConstraintExceptionNotNull</constraint-name><code>(((HtmlTable) page.getHtmlElementById(&quot;tableResult&quot;)).getCellAt(0, 0).asText() != null);</code><stateinvariants>Error</stateinvariants></mapping><mapping><name>enterExpressionAndLiteralsMapping</name><transition-name>enterExpressionAndLiterals</transition-name><code>textInputExpression.setText(&quot;a | b&quot;); 
textInputInfeasibleLiterals.setText(&quot;a=1,b=1&quot;);
textInputMaxTestSetSize.setText(&quot;&quot;);</code></mapping></mappings>