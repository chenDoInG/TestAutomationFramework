<?xml version="1.0" encoding="UTF-8"?>
<mappings><mapping><name>addChocolate</name><transition-name>addChocs</transition-name><code>vm.addChoc(&quot;MM&quot;);</code><required-mappings>vMachineInit</required-mappings></mapping><mapping><name>initializeVendingMachine</name><transition-name>initialize</transition-name><code>vendingMachine vm = new vendingMachine();</code></mapping><mapping><name>coinOneDollarAndTen</name><transition-name>coin</transition-name><code>vm.coin(10);
vm.coin(25);
vm.coin(25);
vm.coin(25);
vm.coin(25);
</code><required-mappings>vMachineInit</required-mappings></mapping><mapping><name>coinAnyCredit</name><transition-name>coin</transition-name><code>vm.coin(c);</code><required-mappings>vMachineInit</required-mappings></mapping><mapping><name>intCInit</name><object-name>c</object-name><class-name>int</class-name><code>10,25,100</code></mapping><mapping><name>coinThreeValues</name><transition-name>coin</transition-name><code>vm.coin(c);</code><required-mappings>vMachineInit,intCInit</required-mappings><parameters>intCInit</parameters></mapping><mapping><name>stringBufferInit</name><object-name>sb</object-name><class-name>StringBuffer</class-name><code>StringBuffer sb = new StringBuffer(&quot;MM&quot;);</code></mapping><mapping><name>constraintStockEqualsTenMapping</name><constraint-name>ConstraintStockEqualsTen</constraint-name><code>vm.getStock() == 10;</code><required-mappings>vMachineInit</required-mappings><stateinvariants>State7,State8,State9</stateinvariants></mapping><mapping><name>constraintStockBetweenOneAndTen</name><constraint-name>ConstraintStockBetweenOneAndTen</constraint-name><code>vm.getStock().size() &gt; 0 &amp;&amp; vm.getStock().size() &lt; 10;</code><required-mappings>vMachineInit</required-mappings><stateinvariants>State4,State5,State6</stateinvariants></mapping><mapping><name>getChocolate</name><transition-name>getChocs</transition-name><code>vm.getChoc(sb);
</code><required-mappings>vMachineInit,stringBufferInit</required-mappings></mapping></mappings>