<?xml version="1.0" encoding="UTF-8"?>
<mappings><mapping><name>initializeMapping</name><transition-name>initialize</transition-name><code>final WebClient webClient = new WebClient();
		WebRequest request = null;
		 try {
			request = new WebRequest( new URL("http://localhost:8080/CoverageWebApplication/coverage/GraphCoverage" ), HttpMethod.POST);
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		 
		HtmlPage page = null;
		try {
			page = webClient.getPage(request);
		} catch (FailingHttpStatusCodeException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		HtmlForm form = page.getFormByName("graphCoverageForm");
		 
		final HtmlSubmitInput buttonNodes = form.getInputByValue("Nodes");
		
		final HtmlSubmitInput buttonEdges = form.getInputByValue("Edges");
		
		final HtmlSubmitInput buttonEdgePairs = form.getInputByValue("Edge-Pair");
		
		final HtmlSubmitInput buttonSimplePaths = form.getInputByValue("Simple Paths");
		
		final HtmlSubmitInput buttonPrimePaths = form.getInputByValue("Prime Paths");
			
		final HtmlSubmitInput buttonNodeCoverage = form.getInputByValue("Node Coverage");
		
		final HtmlSubmitInput buttonEdgeCoverage = form.getInputByValue("Edge Coverage");
		
		final HtmlSubmitInput buttonEdgePairCoverage = form.getInputByValue("Edge-Pair Coverage");
		
		final HtmlSubmitInput buttonPrimePathCoverage = form.getInputByValue("Prime Path Coverage");
		
		final HtmlSubmitInput buttonNewGraph = form.getInputByValue("New Graph");
		
		final HtmlSubmitInput buttonDataFlowCoverage = form.getInputByValue("Data Flow Coverage");
		final HtmlSubmitInput buttonLogicCoverage = form.getInputByValue("Logic Coverage");
		final HtmlSubmitInput buttonMinimalMUMCUTCoverage = form.getInputByValue("Minimal-MUMCUT Coverage");
		
		final HtmlTextArea textAreaEdges = form.getTextAreaByName("edges");
		final HtmlTextInput textFieldEndNodes = form.getInputByName("endNode");
		final HtmlTextInput textFieldInitialNodes = form.getInputByName("initialNode");
		
		final HtmlTable table = null;</code><required-mappings></required-mappings></mapping>
<mapping><name>enterGraphMapping</name><transition-name>enterGraph</transition-name><code>
		textAreaEdges.setText("1 2\n");	
		textFieldEndNodes.setValueAttribute("2");
		textFieldInitialNodes.setValueAttribute("1");
		</code><required-mappings></required-mappings></mapping>
<mapping><name>updateGraphMapping</name><transition-name>updateGraph</transition-name><code>		
		textAreaEdges.setText("1 2\n1 3\n");	
		textFieldEndNodes.setValueAttribute("2 3");
		textFieldInitialNodes.setValueAttribute("1");</code><required-mappings></required-mappings></mapping>
<mapping><name>nodeMapping</name>
	<transition-name>node</transition-name>
	<code>try {
			page = buttonNodes.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code><required-mappings></required-mappings></mapping>
<mapping><name>edgeMapping</name>
	<transition-name>edge</transition-name>
	<code>try {
			page = buttonEdges.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code><required-mappings></required-mappings></mapping>
	<mapping>
		<name>edgePairMapping</name>
		<transition-name>edgePair</transition-name>
		<code>try {
			page = buttonEdgePairs.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping>
	<mapping>
		<name>simplePathMapping</name>
		<transition-name>simplePath</transition-name>
		<code>try {
			page = buttonSimplePaths.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping>
	<mapping>
		<name>primePathMapping</name>
		<transition-name>primePath</transition-name>	
		<code>try {
			page = buttonPrimePaths.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code>
		<required-mappings></required-mappings></mapping>
	<mapping>
		<name>nodeCoverageMapping</name>
		<transition-name>nodeCoverage</transition-name>
			
		<code>try {
			page = buttonNodeCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code>
		<required-mappings></required-mappings></mapping>
	<mapping>
		<name>edgeCoverageMapping</name>
		<transition-name>edgeCoverage</transition-name>
		<code>try {
			page = buttonEdgeCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping>
	<mapping>
		<name>edgePairCoverageMapping</name>
		<transition-name>edgePairCoverage</transition-name>
		<code>try {
			page = buttonEdgePairCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping>
	<mapping>
		<name>primePathCoverageMapping</name>
		<transition-name>primePathCoverage</transition-name>
		<code>try {
			page = buttonPrimePathCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping>
	<mapping>
		<name>logicMapping</name>
		<transition-name>logic</transition-name>
		<code>try {
			page = buttonLogicCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping>
	<mapping>
		<name>dataFlowMapping</name>
		<transition-name>dataFlow</transition-name>
		<code>try {
			page = buttonDataFlowCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping>
	<mapping>
		<name>minimalMUMCUTMapping</name>
		<transition-name>minimalMUMCUT</transition-name>
		<code>try {
			page = buttonMinimalMUMCUTCoverage.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping>
	<mapping>
		<name>newGraphMapping</name>
		<transition-name>newGraph</transition-name>
		<code>try {
			page = buttonNewGraph.click();
		} catch (IOException e) {
			// TODO Auto-generated catch block
		e.printStackTrace();
		}</code></mapping>
	<mapping>
		<name>ConstraintResultNotNullMapping</name>
		<constraint-name>ConstraintResultNotNull</constraint-name>
		<code>(((HtmlTable) page.getHtmlElementById("tableResult")).getCellAt(0, 0).asText() != null);</code>
		<required-mappings></required-mappings>
		<stateinvariants>Nodes,Edges,EdgePairs,SimplePaths,PrimePaths,NodeCoverage,EdgeCoverage,EdgePairCoverage,PrimePathCoverage</stateinvariants></mapping></mappings>