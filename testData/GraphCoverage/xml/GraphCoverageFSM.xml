<?xml version="1.0" encoding="UTF-8"?>
<mappings><mapping><name>initializeMapping</name><transition-name>initialize</transition-name><code>final WebClient webClient = new WebClient();
		WebRequest request = null;
		try {
		    request = new WebRequest( new URL(&quot;http://localhost:8080/CoverageWebApplication/coverage/GraphCoverage&quot;), HttpMethod.POST);
		} catch (MalformedURLException e) {
		e.printStackTrace();
		}
				 
		HtmlPage page = null;
		try {
		    page = webClient.getPage(request);
		} catch (FailingHttpStatusCodeException e) {
		e.printStackTrace();
		} catch (IOException e) {
		e.printStackTrace();
		}
				
		HtmlForm form = page.getFormByName(&quot;graphCoverageForm&quot;);
				 
		final HtmlSubmitInput buttonNodes = form.getInputByValue(&quot;Nodes&quot;);
				
		final HtmlSubmitInput buttonEdges = form.getInputByValue(&quot;Edges&quot;);
				
		final HtmlSubmitInput buttonEdgePairs = form.getInputByValue(&quot;Edge-Pair&quot;);
				
		final HtmlSubmitInput buttonSimplePaths = form.getInputByValue(&quot;Simple Paths&quot;);
				
		final HtmlSubmitInput buttonPrimePaths = form.getInputByValue(&quot;Prime Paths&quot;);
					
		final HtmlSubmitInput buttonNodeCoverage = form.getInputByValue(&quot;Node Coverage&quot;);
				
		final HtmlSubmitInput buttonEdgeCoverage = form.getInputByValue(&quot;Edge Coverage&quot;);
				
		final HtmlSubmitInput buttonEdgePairCoverage = form.getInputByValue(&quot;Edge-Pair Coverage&quot;);
				
		final HtmlSubmitInput buttonPrimePathCoverage = form.getInputByValue(&quot;Prime Path Coverage&quot;);
				
		final HtmlSubmitInput buttonNewGraph = form.getInputByValue(&quot;New Graph&quot;);
			
		final HtmlSubmitInput buttonGraphCoverage = form.getInputByValue(&quot;Graph Coverage&quot;);		
		final HtmlSubmitInput buttonDataFlowCoverage = form.getInputByValue(&quot;Data Flow Coverage&quot;);
		final HtmlSubmitInput buttonLogicCoverage = form.getInputByValue(&quot;Logic Coverage&quot;);
		final HtmlSubmitInput buttonMinimalMUMCUTCoverage = form.getInputByValue(&quot;Minimal-MUMCUT Coverage&quot;);
				
		final HtmlTextArea textAreaEdges = form.getTextAreaByName(&quot;edges&quot;);
		final HtmlTextInput textFieldEndNodes = form.getInputByName(&quot;endNode&quot;);
		final HtmlTextInput textFieldInitialNodes = form.getInputByName(&quot;initialNode&quot;);
				
		final HtmlTable table = null;</code></mapping><mapping><name>enterGraphMapping</name><transition-name>enterGraph</transition-name><code>textAreaEdges.setText(&quot;1 2\n&quot;);	
		textFieldEndNodes.setValueAttribute(&quot;2&quot;);
		textFieldInitialNodes.setValueAttribute(&quot;1&quot;);</code></mapping><mapping><name>updateGraphMapping</name><transition-name>updateGraph</transition-name><code>textAreaEdges.setText(&quot;1 2\n1 3\n&quot;);	
		textFieldEndNodes.setValueAttribute(&quot;2 3&quot;);
		textFieldInitialNodes.setValueAttribute(&quot;1&quot;);</code></mapping><mapping><name>newGraphMapping</name><transition-name>newGraph</transition-name><code>try {
			page = buttonNewGraph.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>graphMapping</name><transition-name>graph</transition-name><code>try {
			page = buttonGraphCoverage.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>dataFlowMapping</name><transition-name>dataFlow</transition-name><code>try {
			page = buttonDataFlowCoverage.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>logicMapping</name><transition-name>logic</transition-name><code>try {
			page = buttonLogicCoverage.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>minimalMUMCUTMapping</name><transition-name>minimalMUMCUT</transition-name><code>try {
			page = buttonMinimalMUMCUTCoverage.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>edgeMapping</name><transition-name>edge</transition-name><code>try {
			page = buttonEdges.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>nodeMapping</name><transition-name>node</transition-name><code>try {
			page = buttonNodes.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>edgePairMapping</name><transition-name>edgePair</transition-name><code>try {
			page = buttonEdgePairs.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>simplePathMapping</name><transition-name>simplePath</transition-name><code>try {
			page = buttonSimplePaths.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>primePathMapping</name><transition-name>primePath</transition-name><code>try {
			page = buttonPrimePaths.click();
		} catch (IOException e) {
		e.printStackTrace();
		}
		</code></mapping><mapping><name>edgeCoverageMapping</name><transition-name>edgeCoverage</transition-name><code>try {
			page = buttonEdgeCoverage.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>nodeCoverageMapping</name><transition-name>nodeCoverage</transition-name><code>try {
			page = buttonNodeCoverage.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>primePathCoverageMapping</name><transition-name>primePathCoverage</transition-name><code>try {
			page = buttonPrimePathCoverage.click();
		} catch (IOException e) {
		e.printStackTrace();
		}
</code></mapping><mapping><name>edgePairCoverageMapping</name><transition-name>edgePairCoverage</transition-name><code>try {
			page = buttonEdgePairCoverage.click();
		} catch (IOException e) {
		e.printStackTrace();
		}</code></mapping><mapping><name>constraintResultNotNullMapping</name><constraint-name>ConstraintResultNotNull</constraint-name><code>(((HtmlTable) page.getHtmlElementById(&quot;tableResult&quot;)).getCellAt(0, 0).asText() != null);</code><stateinvariants>Nodes,Edges,EdgePairs,SimplePaths,PrimePaths,NodeCoverage,EdgeCoverage,EdgePairCoverage,PrimePathCoverage</stateinvariants></mapping></mappings>