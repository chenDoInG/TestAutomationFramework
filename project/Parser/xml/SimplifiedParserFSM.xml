<?xml version="1.0" encoding="UTF-8" standalone="no"?><mappings><mapping><name>parseMapping</name><transition-name>parse</transition-name><code>buttonParse.doClick();</code><required-mappings>initializeDynamicParser</required-mappings></mapping><mapping><name>initializeDynamicParser</name><object-name>parserView</object-name><class-name>DynamicParserView</class-name><code>		DynamicParserView parserView = new DynamicParserView(new DynamicParserApp());
		JTextArea textAreaVar = (JTextArea) ((JScrollPane)parserView.getComponent().getComponent(0)).getViewport().getView();
		JCheckBox checkBoxDirection = (JCheckBox) parserView.getComponent().getComponent(1);
		JTextField textFieldString = (JTextField) parserView.getComponent().getComponent(2);
		JComboBox comboBoxOperation = (JComboBox) parserView.getComponent().getComponent(3);
		JList listOperator = (JList) ((JScrollPane)parserView.getComponent().getComponent(4)).getViewport().getView();
		JButton buttonDown = (JButton) parserView.getComponent().getComponent(5);
		JButton buttonUp = (JButton) parserView.getComponent().getComponent(6);
		JRadioButton radioButtonMath = (JRadioButton) parserView.getComponent().getComponent(7);
		JRadioButton radioButtonCustomized = (JRadioButton) parserView.getComponent().getComponent(8);
		JRadioButton radioButtonEqual = (JRadioButton) parserView.getComponent().getComponent(9);
		JButton buttonParse = (JButton) parserView.getComponent().getComponent(10);
		JTextArea textAreaOutput = (JTextArea) ((JScrollPane)parserView.getComponent().getComponent(11)).getViewport().getView();
		JButton buttonClear = (JButton) parserView.getComponent().getComponent(12);
		DynamicParserApp.main(null);</code></mapping><mapping><name>mathMapping</name><transition-name>math</transition-name><code>radioButtonMath.doClick();</code><required-mappings>initializeDynamicParser</required-mappings></mapping><mapping><name>customizeMapping</name><transition-name>customize</transition-name><code>radioButtonCustomized.doClick();</code><required-mappings>initializeDynamicParser</required-mappings></mapping><mapping><name>allEqualMapping</name><transition-name>allEqual</transition-name><code>radioButtonEqual.doClick();</code><required-mappings>initializeDynamicParser</required-mappings></mapping><mapping><name>clearMapping</name><transition-name>clear</transition-name><code>buttonClear.doClick();</code><required-mappings>initializeDynamicParser</required-mappings></mapping><mapping><name>leftMapping</name><transition-name>left</transition-name><code>checkBoxDirection.doClick();</code><required-mappings>initializeDynamicParser</required-mappings></mapping><mapping><name>ConstraintLeftMapping</name><constraint-name>ConstraintLeft</constraint-name><code>checkBoxDirection.isSelected() == true;</code><required-mappings>initializeDynamicParser</required-mappings><stateinvariants>Left,MathLeft,AllEqualLeft,AllEqualLeftOutput,LogicLeft,LogicLeftOutPut,LeftOutPut,MathLeftOutPut</stateinvariants></mapping><mapping><name>ConstraintRightMapping</name><constraint-name>ConstraintRight</constraint-name><code>checkBoxDirection.isSelected() == false;</code><required-mappings>initializeDynamicParser</required-mappings><stateinvariants>ArithDefault,Math,AllEqual,Output,MathOutput,AllEqualOutput,LogicalDefault,LogicOutput</stateinvariants></mapping><mapping><name>logicModeMapping</name><transition-name>logicMode</transition-name><code>comboBoxOperation.setSelectedIndex(1);</code><required-mappings>initializeDynamicParser</required-mappings></mapping><mapping><name>arithModeMapping</name><transition-name>arithMode</transition-name><code>comboBoxOperation.setSelectedIndex(0);</code><required-mappings>initializeDynamicParser</required-mappings></mapping><mapping><name>rightMapping</name><transition-name>right</transition-name><code>checkBoxDirection.doClick();</code><required-mappings>initializeDynamicParser</required-mappings></mapping><mapping><name>changePrecedenceMapping</name><transition-name>changePrecedence</transition-name><code>parserView.setOperStrings(new String[]{ "+", "%", "*", "/" });</code><required-mappings>initializeDynamicParser</required-mappings></mapping></mappings>