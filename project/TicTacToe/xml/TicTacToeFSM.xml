<?xml version="1.0" encoding="UTF-8"?>
<mappings><mapping><name>startMapping</name><transition-name>start</transition-name><code>//board values
		int[][] Amap = { {0,0,0} , {0,0,0} , {0,0,0}  }; //Available Spots on the board
		int[][] Xmap = { {0,0,0} , {0,0,0} , {0,0,0}  }; //location of &amp;apos;X&amp;apos; Pieces
		int[][] Omap = { {0,0,0} , {0,0,0} , {0,0,0}  }; //location of &amp;apos;O&amp;apos; Pieces

		//Game values
		int WhosTurn = 1;
				
		TicTacToe ttt = new TicTacToe();
		ttt.Welcome();</code></mapping><mapping><name>newMapping</name><transition-name>new</transition-name><code>System.setIn(new ByteArrayInputStream(&quot;y&quot;.getBytes()));	
		try {
			ttt.NewGame(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);</code></mapping><mapping><name>exitMapping</name><transition-name>exit</transition-name><code>System.setIn(new ByteArrayInputStream(&quot;n&quot;.getBytes()));
        try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}</code></mapping><mapping><name>ConstraintXWinMapping</name><constraint-name>ConstraintXWin</constraint-name><code>ttt.getWinner().equals(&quot;eXes&quot;) == true;</code><stateinvariants>XWin</stateinvariants></mapping><mapping><name>movesOWinMapping</name><transition-name>moves</transition-name><code>//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;b2&quot;.getBytes()));	
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;a1&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;a2&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;c2&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;b3&quot;.getBytes()));
				
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;b1&quot;.getBytes()));
						
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;a3&quot;.getBytes()));
								
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;c1&quot;.getBytes()));
										
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		//this code is used to simulate the system input from the command line
		//System.setIn(new ByteArrayInputStream(&quot;n&quot;.getBytes()));
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}</code></mapping><mapping><name>ConstraintOWinMapping</name><constraint-name>ConstraintOWin</constraint-name><code>ttt.getWinner().equals(&quot;Ohes&quot;) == true;</code><stateinvariants>OWin</stateinvariants></mapping><mapping><name>ConstraintDrawMapping</name><constraint-name>ConstraintDraw</constraint-name><code>ttt.getWinner().equals(&quot;BOARD FULL! STALEMATE - NO&quot;) == true;</code><stateinvariants>Draw</stateinvariants></mapping><mapping><name>movesXWinMapping</name><transition-name>moves</transition-name><code>System.setIn(new ByteArrayInputStream(&quot;y&quot;.getBytes()));	
		try {
			ttt.NewGame(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;a1&quot;.getBytes()));	
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;a2&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;b2&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;c3&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;b1&quot;.getBytes()));
				
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;b3&quot;.getBytes()));
						
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		
		System.setIn(new ByteArrayInputStream(&quot;c1&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}</code></mapping><mapping><name>movesDrawMapping</name><transition-name>moves</transition-name><code>System.setIn(new ByteArrayInputStream(&quot;a1&quot;.getBytes()));	
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;a2&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;a3&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;b2&quot;.getBytes()));
		
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;c2&quot;.getBytes()));
				
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;b1&quot;.getBytes()));
						
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;b3&quot;.getBytes()));
								
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);
		
		//this code is used to simulate the system input from the command line
		System.setIn(new ByteArrayInputStream(&quot;c1&quot;.getBytes()));
										
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ttt.ShowGameBoard(Amap, Xmap, Omap);

		System.setIn(new ByteArrayInputStream(&quot;c3&quot;.getBytes()));
										
		try {
			WhosTurn = ttt.GetMove(WhosTurn, Amap, Xmap, Omap);
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}try {
			ttt.CheckWin(Amap, Xmap, Omap);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}</code></mapping></mappings>